package com.fitin.shopping.repository;

import com.fitin.shopping.dto.ProductSearchDto;
import com.fitin.shopping.dto.MainProductDto;
import com.fitin.shopping.dto.QMainProductDto;
import com.fitin.shopping.entity.Product;
import com.fitin.shopping.entity.QProduct;
import com.querydsl.core.types.dsl.BooleanExpression;
import com.querydsl.jpa.impl.JPAQueryFactory;
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;
import org.thymeleaf.util.StringUtils;

import javax.persistence.EntityManager;
import java.time.LocalDateTime;
import java.util.List;

@RequiredArgsConstructor
public class ProductRepositoryCustomImpl implements ProductRepositoryCustom {

    private final JPAQueryFactory queryFactory;

    public ProductRepositoryCustomImpl(EntityManager em) {
        this.queryFactory = new JPAQueryFactory(em);
    }

    // 판매 상태 조건 (판매 중/품절)
    private BooleanExpression searchSellStatusEq(String searchSellStatus) {
        return searchSellStatus == null ? null : QProduct.product.sellStatus.eq(searchSellStatus);
    }

    // 등록일 조건
    private BooleanExpression regDtsAfter(String searchDateType) {
        LocalDateTime dateTime = LocalDateTime.now();

        if (StringUtils.equals("all", searchDateType)) {
            return null;
        } else if (StringUtils.equals("1d", searchDateType)) {
            dateTime = dateTime.minusDays(1);
        } else if (StringUtils.equals("1w", searchDateType)) {
            dateTime = dateTime.minusWeeks(1);
        } else if (StringUtils.equals("1m", searchDateType)) {
            dateTime = dateTime.minusMonths(1);
        } else if (StringUtils.equals("6m", searchDateType)) {
            dateTime = dateTime.minusMonths(6);
        }

        return QProduct.product.createdAt.after(dateTime);
    }

    // 상품명이나 작성자로 검색
    private BooleanExpression searchByLike(String searchBy, String searchQuery) {
        if (StringUtils.equals("name", searchBy)) {
            return QProduct.product.name.like("%" + searchQuery + "%");
        } else if (StringUtils.equals("createdBy", searchBy)) {
            return QProduct.product.createdBy.like("%" + searchQuery + "%");
        }

        return null;
    }

    // 관리 페이지에서 상품 조회
    @Override
    public Page<Product> getAdminProductPage(ProductSearchDto productSearchDto, Pageable pageable) {
        List<Product> content = queryFactory
                .selectFrom(QProduct.product)
                .where(
                        regDtsAfter(productSearchDto.getSearchDateType()),
                        searchSellStatusEq(productSearchDto.getSearchSellStatus()),
                        searchByLike(productSearchDto.getSearchBy(), productSearchDto.getSearchQuery())
                )
                .orderBy(QProduct.product.id.desc())
                .offset(pageable.getOffset())
                .limit(pageable.getPageSize())
                .fetch();

        long total = queryFactory.selectFrom(QProduct.product).fetchCount();

        return new PageImpl<>(content, pageable, total);
    }

    // 메인 페이지에서 상품 조회
    @Override
    public Page<MainProductDto> getMainProductPage(ProductSearchDto productSearchDto, Pageable pageable) {
        List<MainProductDto> content = queryFactory
                .select(new QMainProductDto(
                        QProduct.product.id,
                        QProduct.product.name,
                        QProduct.product.description,
                        QProduct.product.price,
                        QProduct.product.stockQuantity
                ))
                .from(QProduct.product)
                .where(QProduct.product.name.like("%" + productSearchDto.getSearchQuery() + "%"))
                .orderBy(QProduct.product.id.desc())
                .offset(pageable.getOffset())
                .limit(pageable.getPageSize())
                .fetch();

        long total = queryFactory.selectFrom(QProduct.product).fetchCount();

        return new PageImpl<>(content, pageable, total);
    }
}
