package com.fitin.shopping.entity;

import javax.persistence.*;

import com.fitin.shopping.dto.ReviewCreateDto;
import com.fitin.shopping.exception.ProductNotFoundException;
import com.fitin.shopping.repository.ProductRepository;

import java.time.LocalDateTime;

@Entity
@Table(name = "reviews")
public class Review {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "product_id")
    private Product product;

    @Column(nullable = false, length = 1000)
    private String content;

    @Column(nullable = false)
    private int rating;

    @Column(nullable = false)
    private LocalDateTime createdAt;

    public Review() {
        this.createdAt = LocalDateTime.now();
    }

    public Review(Product product, String content, int rating) {
        this.product = product;
        this.content = content;
        this.rating = rating;
        this.createdAt = LocalDateTime.now();
    }
    
    public Review(ReviewCreateDto reviewCreateDto, ProductRepository productRepository) {
        this.content = reviewCreateDto.getContent();
        this.createdAt = LocalDateTime.now();

        // productId로 Product 엔티티를 조회하고 할당
        this.product = productRepository.findById(reviewCreateDto.getProductId())
            .orElseThrow(() -> new ProductNotFoundException("Product not found"));
    }
    public Long getId() {
        return id;
    }

    public Product getProduct() {
        return product;
    }

    public String getContent() {
        return content;
    }

    public int getRating() {
        return rating;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }
    
    
}
