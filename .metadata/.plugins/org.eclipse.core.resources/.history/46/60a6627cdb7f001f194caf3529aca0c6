package com.fitin.shopping.repository;

import com.fitin.shopping.entity.Product;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.querydsl.QuerydslPredicateExecutor;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface ProductRepository extends JpaRepository<Product, Long>, QuerydslPredicateExecutor<Product>, ProductRepositoryCustom {

    // 상품명으로 데이터 조회
    List<Product> findByName(String name);

    // 상품명 또는 설명으로 데이터 조회
    List<Product> findByNameOrDescription(String name, String description);

    // 가격이 특정 값 이하인 상품 조회
    List<Product> findByPriceLessThan(int price);

    // 가격 내림차순으로 정렬
    List<Product> findAllByOrderByPriceDesc();

    // 가격 조건과 함께 내림차순으로 정렬
    List<Product> findByPriceLessThanOrderByPriceDesc(int price);

    // JPQL 사용: 설명에 특정 문자가 포함된 상품을 가격 내림차순으로 검색
    @Query("SELECT p FROM Product p WHERE p.description LIKE %:description% ORDER BY p.price DESC")
    List<Product> findByDescription(@Param("description") String description);

    // 네이티브 쿼리 사용: 복잡한 쿼리 사용 가능
    @Query(value = "SELECT * FROM product p WHERE p.description LIKE %:description% ORDER BY p.price DESC", nativeQuery = true)
    List<Product> findByDescriptionNative(@Param("description") String description);
}
