plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '22'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Web Starter (REST API 개발용)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring DevTools 추가
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Spring Boot Security (인증 및 권한 관리)
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Boot Data JPA (데이터베이스 통합)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Boot Validation (요청 데이터 유효성 검사)
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JWT 라이브러리 (토큰 생성 및 검증)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Lombok (보일러플레이트 코드 제거)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // H2 Database (로컬 테스트용 인메모리 DB)
    runtimeOnly 'com.h2database:h2'

    // 파일 업로드를 위한 Apache Commons FileUpload
    implementation 'commons-fileupload:commons-fileupload:1.4'

    // 페이징 처리 및 정렬 기능을 위한 Spring Data Paging
    implementation 'org.springframework.data:spring-data-commons'

    // Thymeleaf Template Engine (템플릿 렌더링)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // 이미지 처리 관련 라이브러리 추가 (이미지 크기 조정, 변환 등을 지원)
    implementation 'org.imgscalr:imgscalr-lib:4.2'
    
    
    // Querydsl JPA
    implementation 'com.querydsl:querydsl-jpa'
    // Querydsl APT (Annotation Processor)
    annotationProcessor 'com.querydsl:querydsl-apt'
    // Querydsl APT with JPA annotation processor
    annotationProcessor 'com.querydsl:querydsl-apt:jpa'
    
    // Hibernate Validator for Bean Validation (JSR 380)
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'org.glassfish:javax.el:3.0.0'

    // 테스트 관련 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}


sourceSets {
    main.java.srcDirs += 'build/generated/sources/annotationProcessor/java/main'
}

tasks.named('compileJava') {
    options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/main")
}